{
    "openapi": "3.0.0",
    "info": {
        "title": "Api pour scrabble",
        "description": "Implementation de Swagger avec Laravel9 pour documneter l'api",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Display a listing of projects."
                    }
                }
            }
        },
        "/v1/joueur/{idJoueur}": {
            "get": {
                "tags": [
                    "joueurs"
                ],
                "summary": "Trouver un joueurs a partie son id ",
                "description": "Trouver un joueurs a partie son id",
                "operationId": "getJoueur",
                "parameters": [
                    {
                        "name": "idJoueur",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/v1/inscrire": {
            "post": {
                "tags": [
                    "inscrire"
                ],
                "summary": "Get List Of Cases Per Country Per Province By Case Type From The First Recorded Case",
                "description": "Returns all cases by case type for a country from the first recorded case. Country must be the country_slug from /countries. Cases must be one of: confirmed, recovered, deaths",
                "operationId": "inscrire",
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/v1/joueurs": {
            "get": {
                "tags": [
                    "joueurs"
                ],
                "summary": "la liste des joueurs",
                "description": "la liste des joueurs",
                "operationId": "getJoueurs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "ScrabbleGO",
            "description": "API Endpoints de projet"
        }
    ],
    "security": [
        []
    ]
}